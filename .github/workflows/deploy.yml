# Nom du workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: Déploiement sur VPS

# Déclencheur : ce workflow s'exécute à chaque push sur la branche 'main'
on:
  push:
    branches:
      - main

# Les jobs à exécuter
jobs:
  build-and-deploy:
    # Utiliser une machine virtuelle Ubuntu fournie par GitHub pour exécuter les étapes
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer le code de votre dépôt
      - name: Checkout du code
        uses: actions/checkout@v3

      # 2. Se connecter au registre de conteneurs de GitHub (GHCR)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Construire l'image Docker et la pousser sur le registre
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Nom de l'image : ghcr.io/VOTRE_NOM_UTILISATEUR/NOM_DU_DEPOT:latest
          tags: ghcr.io/${{ github.repository }}:latest

      # 4. Se connecter au VPS et déployer la nouvelle image
      - name: Déployer sur le VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            # Se connecter au registre de conteneurs de GitHub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # Tirer (pull) la dernière version de l'image
            docker pull ghcr.io/${{ github.repository }}:latest
            
            # Arrêter et supprimer le conteneur existant s'il y en a un
            docker stop ag1-test-container || true
            docker rm ag1-test-container || true
            
            # Lancer le nouveau conteneur avec la nouvelle image
            # Il expose le port 80 du conteneur sur le port 80 du VPS
            docker run -d -p 80:80 --name ag1-test-container ghcr.io/${{ github.repository }}:latest

